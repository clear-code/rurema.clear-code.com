- hosts: servers
  become: yes
  vars:
    rurema_search_user: rurema
    ruby_api_version: 3.1.0
    passenger_version: 6.0.20
  tasks:
    # Base
    - name: Upgrade packages
      apt:
        update_cache: yes
        cache_valid_time: 3600
        upgrade: safe
    - name: Install base packages
      apt:
        name:
          - apt-listchanges
          - curl
          - git
          - lv
          - ruby
          - unattended-upgrades
          - vim
          - zsh
    - name: Use VIM as the default editor
      command: update-alternatives --set editor /usr/bin/vim.basic
    - name: Use e-mail for apt-listchanges
      lineinfile:
        path: /etc/apt/listchanges.conf
        regexp: "^frontend="
        line: "frontend=mail"
    - name: Reboot automatically when package upgrade requires restart
      lineinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: "^(//)?Unattended-Upgrade::Automatic-Reboot "
        line: "Unattended-Upgrade::Automatic-Reboot \"true\";"
    - name: Send notification when packages upgraded automatically
      lineinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: "^(//)?Unattended-Upgrade::Mail "
        line: "Unattended-Upgrade::Mail \"root@clear-code.com\";"
    - name: "sudo: NOPASSWD"
      copy:
        src: etc/sudoers.d/sudo-nopasswd
        dest: /etc/sudoers.d/sudo-nopasswd
        mode: 0400
    - name: Install Groonga APT repository
      apt:
        deb: https://packages.groonga.org/debian/groonga-apt-source-latest-bookworm.deb
    - name: Install Bundler
      gem:
        name: bundler
        user_install: no

    # Set hostname
    - name: Set hostname
      copy:
        content: "{{ inventory_hostname }}"
        dest: /etc/hostname
      notify:
        - Apply hostname

    # Let's Encrypt
    - name: Install certbot
      tags: tls
      apt:
        name:
          - certbot
    - name: "Check Let's Encrypt certificate"
      tags: tls
      stat:
        path: /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem
      register: certificate
    - name: "Stop Apache before initializing Let's Encrypt certificate"
      tags: tls
      service:
        name: apache2
        state: stopped
      when: not certificate.stat.exists
    - name: "Initialize Let's Encrypt certificate"
      tags: tls
      shell: |
        certbot certonly \
          --standalone \
          --non-interactive \
          --agree-tos \
          --email webmaster@clear-code.com \
          --domain {{ inventory_hostname }}
      when: not certificate.stat.exists
    - name: "Put Let's Encrypt update script"
      tags: tls
      copy:
        src: etc/letsencrypt/renewal-hooks/{{ item }}
        dest: /etc/letsencrypt/renewal-hooks/{{ item }}
        mode: 0700
      with_items:
        - pre/stop-apache2
        - post/start-apache2

    # rurema search
    - name: Create user for rurema search
      user:
        name: "{{ rurema_search_user }}"
    - name: Put ~{{ rurema_search_user }}/.forward
      copy:
        content: root
        dest: ~{{ rurema_search_user }}/.forward
        owner: "{{ rurema_search_user }}"
        group: "{{ rurema_search_user }}"
    - name: Clone rurema search
      become_user: "{{ rurema_search_user }}"
      git:
        repo: https://github.com/clear-code/rurema-search.git
        dest: ~{{ rurema_search_user }}/rurema-search
      notify:
        - Restart rurema search
    - name: Put rurema search configurations
      copy:
        src: home/rurema/rurema-search/smtp.yaml
        dest: ~{{ rurema_search_user }}/rurema-search/smtp.yaml
        owner: "{{ rurema_search_user }}"
        group: "{{ rurema_search_user }}"
    - name: Set cron - MAILTO
      cronvar:
        user: "{{ rurema_search_user }}"
        name: MAILTO
        value: "{{ rurema_search_user }}"
    - name: Set cron - PATH
      cronvar:
        user: "{{ rurema_search_user }}"
        name: PATH
        value: /usr/local/bin:/usr/bin:/bin
    - name: Set cron - update.sh
      cron:
        user: "{{ rurema_search_user }}"
        special_time: daily
        name: "Update rurema and its index"
        job: "cd /home/{{ rurema_search_user }}/rurema-search && bundle exec ./update.sh"
    - name: Install packages for rurema-search
      apt:
        name:
          - gcc
          - groonga-bin
          - groonga-plugin-suggest
          - groonga-tokenizer-mecab
          - libgroonga-dev
          - make
          - ruby-dev
    - name: Update gems
      become_user: "{{ rurema_search_user }}"
      shell: |
        bundle config path vendor/bundler
        bundle config without development:test
        bundle install
      args:
        chdir: ~{{ rurema_search_user }}/rurema-search/

    # Apache
    - name: Install Apache and related packages
      apt:
        name:
          - apache2
          - apache2-dev
          - libapr1-dev
          - libaprutil1-dev
          - libcurl4-openssl-dev
          - libssl-dev
    - name: Install Passenger
      gem:
        name: passenger
        version: "{{ passenger_version }}"
        user_install: no
      register: passenger
    - name: Build Passenger
      command: passenger-install-apache2-module --languages ruby --auto
      when: passenger.changed
    - name: Put Passenger configuration files
      template:
        src: etc/apache2/mods-available/{{ item }}.j2
        dest: /etc/apache2/mods-available/{{ item }}
      with_items:
        - passenger.conf
        - passenger.load
    - name: Enable Apache modules
      command: a2enmod {{ item }}
      with_items:
        - passenger
        - ssl
      notify:
        - Restart Apache
    - name: Put Apache configuration file
      template:
        src: etc/apache2/sites-available/{{ item }}.j2
        dest: /etc/apache2/sites-available/{{ item }}
      with_items:
        - rurema.clear-code.com.conf
      register: apache_config_files
    - name: Disable default Apache configurations
      command: a2dissite {{ item }}
      with_items:
        - 000-default
        - default-ssl
      notify:
        - Restart Apache
      when: apache_config_files.changed
    - name: Enable our Apache configurations
      command: a2ensite {{ item }}
      with_items:
        - rurema.clear-code.com
      notify:
        - Restart Apache
      when: apache_config_files.changed

    # Exim
    - name: Set /etc/aliases
      copy:
        src: etc/aliases
        dest: /etc/aliases
    - name: Set /etc/mailname
      copy:
        content: "{{ inventory_hostname }}"
        dest: /etc/mailname
    - name: Put Exim configuration
      copy:
        src: etc/exim4/update-exim4.conf.conf
        dest: /etc/exim4/update-exim4.conf.conf
      register: exim_config_file
    - name: Update Exim configuration
      command: update-exim4.conf
      notify:
        - Restart Exim
      when: exim_config_file.changed

    # Munin
    - name: Install munin-node
      apt:
        name:
          - munin-node
    - name: Put munin-node configuration
      copy:
        src: etc/munin/munin-node.conf
        dest: /etc/munin/munin-node.conf
      notify:
        - Restart munin-node

  handlers:
    - name: Apply hostname
      command: hostname --file /etc/hostname
    - name: Restart rurema search
      file:
        path: /home/{{ rurema_search_user }}/rurema-search/tmp/restart.txt
        state: touch
        owner: "{{ rurema_search_user }}"
        group: "{{ rurema_search_user }}"
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
    - name: Restart Exim
      service:
        name: exim4
        state: restarted
    - name: Restart munin-node
      service:
        name: munin-node
        state: restarted
